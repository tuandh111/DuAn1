/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.DuAn1.MainAn;

import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import raven.chart.ModelChart;
import com.DuAn1.test.DatabaseConnection;
import com.DuAn1.test.ModelData;

/**
 *
 * @author DELL E5470
 */
public class MainAn2 extends javax.swing.JPanel {

    /**
     * Creates new form MainAn2
     */
     public MainAn2() {
        initComponents();
        chart.setTitle("Doanh thu th√°ng");
        chart.addLegend("IPhone", Color.decode("#7b4397"), Color.decode("#dc2430"));
        chart.addLegend("Samsung", Color.decode("#e65c00"), Color.decode("#F9D423"));
        chart.addLegend("Sony", Color.decode("#0099F7"), Color.decode("#F11712"));
        test();
    }

    private void setData() {
        try {
            List<ModelData> lists = new ArrayList<>();
            DatabaseConnection.getInstance().connectToDatabase();
            String sql = "select DATE_FORMAT(Date,'%M') as `Month`, SUM(TotalAmount) as Amount, SUM(TotalCost) as Cost, SUM(TotalProfit) as Profit from orders group by DATE_FORMAT(Date,'%m%Y') order by Date DESC limit 7";
            PreparedStatement p = DatabaseConnection.getInstance().getConnection().prepareStatement(sql);
            ResultSet r = p.executeQuery();
            while (r.next()) {
                String month = r.getString("Month");
                double amount = r.getDouble("Amount");
                double cost = r.getDouble("Cost");
                double profit = r.getDouble("Profit");
                lists.add(new ModelData(month, amount, cost, profit));
            }
            r.close();
            p.close();
            //  Add Data to chart
            for (int i = lists.size() - 1; i >= 0; i--) {
                ModelData d = lists.get(i);
                chart.addData(new ModelChart(d.getMonth(), new double[]{d.getAmount(), d.getCost(), d.getProfit()}));
            }
            //  Start to show data with animation
            chart.start();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void test() {
        chart.clear();
        chart.addData(new ModelChart("January", new double[]{500000000, 500000000, 1008757743}));
        chart.addData(new ModelChart("February", new double[]{60000000, 300000000, 150000000}));
        chart.addData(new ModelChart("March", new double[]{200765435, 509875424, 900975435}));
        chart.addData(new ModelChart("April", new double[]{480676467, 700964677, 1008765432}));
        chart.addData(new ModelChart("May", new double[]{350765456, 540987888, 500987654}));
        chart.addData(new ModelChart("June", new double[]{450767856, 800987777, 100998755}));
        chart.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chart = new raven.chart.CurveLineChart();

        setBackground(new java.awt.Color(255, 255, 255));

        chart.setForeground(new java.awt.Color(0, 0, 0));
        chart.setFillColor(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chart, javax.swing.GroupLayout.DEFAULT_SIZE, 891, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chart, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private raven.chart.CurveLineChart chart;
    // End of variables declaration//GEN-END:variables
}
